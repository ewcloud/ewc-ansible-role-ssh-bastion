---
- name: Validate user inputs
  ansible.builtin.assert:
    that:
      - "whitelisted_ip_ranges == '' or (whitelisted_ip_ranges is iterable and whitelisted_ip_ranges | length > 0) and (whitelisted_ip_ranges | ansible.utils.ipv4)"
    fail_msg: "Input validation failed. See README.md for information on required inputs and their format. Got: '{{ whitelisted_ip_ranges }}'"
    success_msg: "User input configuration is valid."

- name: Verify Rocky Linux distribution and version
  ansible.builtin.assert:
    that:
      - ansible_facts['distribution'] == 'Rocky'
      - ansible_facts['distribution_major_version'] in ['8', '9']
    fail_msg: "Supports RockyLinux versions 8 or 9. Detected: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_major_version'] }}."
    success_msg: "Running on RockyLinux {{ ansible_facts['distribution_major_version'] }}."

- name: Pin package versions prior to installation
  ansible.builtin.set_fact:
    package_versions:
      rockylinux_8:
        firewalld: "firewalld-0.9.11-9.el8_10"
        fail2ban: "fail2ban-1.0.2-3.el8"
        xorg-x11-xauth: "xorg-x11-xauth-1.0.9-12.el8"
      rockylinux_9:
        firewalld: "firewalld-1.3.4-7.el9"
        fail2ban: "fail2ban-1.0.2-12.el9"
        xorg-x11-xauth: "xorg-x11-xauth-1.1-10.el9"

- name: Enable Extra Packages for Enterprise Linux (EPEL) repository
  ansible.builtin.dnf:
    name: epel-release
    state: present

- name: Install required packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
    allow_downgrade: true
  loop:
    - "{{ package_versions['rockylinux_' + ansible_facts['distribution_major_version']]['firewalld'] }}"
    - "{{ package_versions['rockylinux_' + ansible_facts['distribution_major_version']]['fail2ban'] }}"
    - "{{ package_versions['rockylinux_' + ansible_facts['distribution_major_version']]['xorg-x11-xauth'] }}"

- name: SSH - Disallow root SSH access
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  notify: Restart sshd

- name: Configure /etc/fail2ban/jail.d/ssh.conf
  ansible.builtin.template:
    src: ssh.conf.j2
    dest: /etc/fail2ban/jail.d/ssh.conf
    mode: '0644'
    owner: root
    group: root
  notify: Restart fail2ban

- name: Firewalld - Enabled and started
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true

- name: Fail2ban - Enabled and started
  ansible.builtin.service:
    name: fail2ban
    state: started
    enabled: true

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: List installed package versions
  ansible.builtin.debug:
    msg:
      - "firewalld: {{ ansible_facts.packages['firewalld'][0].version }}-{{ ansible_facts.packages['firewalld'][0].release }}"
      - "fail2ban: {{ ansible_facts.packages['fail2ban'][0].version }}-{{ ansible_facts.packages['fail2ban'][0].release }}"
      - "xorg-x11-xauth: {{ ansible_facts.packages['xorg-x11-xauth'][0].version }}-{{ ansible_facts.packages['xorg-x11-xauth'][0].release }}"
